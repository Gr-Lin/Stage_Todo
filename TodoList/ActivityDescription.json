{
  "namespaces": [ "TodoList" ],

  "fileDescriptions": [
    {
      "activity": {
        "className": "HomeActivity",
        "namespaceName": "TodoList.Activities"
      },
      "view": {
        "inputFile": "Views/HomeView.xml",
        "outputFile": "Home.axml"
      }
    },
    {
      "activity": {
        "className": "AddActivity",
        "namespaceName": "TodoList.Activities"
      },
      "view": {
        "inputFile": "Views/AddView.xml",
        "outputFile": "Add.axml"
      }
    },
    {
      "activity": {
        "className": "EditActivity",
        "namespaceName": "TodoList.Activities"
      },
      "view": {
        "inputFile": "Views/EditView.xml",
        "outputFile": "Disp.axml"
      }
    }
  ]
}



// With this property, you can add some resource file to global scope in order to use them from any other view (even between them)
/*	"globalResourceFiles": [
		"Styles/ButtonStyles.xml",
		"Styles/TextViewStyles.xml"
	],*/


/*{
			// if you have a fragment and not an activity, use the fragment property instead.
			"fragment": {
				// fill the name of your class here
				"className": "MyActivity",
				// fill the namespace of your class here
				"namespaceName": "MyApp.Activities",
				// give a name to the generated file if you want
				// this paramter is optional and a default name could be generated if you remove the next line
				"outputFile": "MyApp_Activities_MyActivity.cs"
			},
			"view": {
				// fill with the path to the view file (relative to the path of this json file)
				"inputFile": "Path/To/The/View/File/Relative/To/Json/File.xml",
				// fill with the name of the outputFile. Be careful, this name will be the one available in Resource.Layout.*
				"outputFile": "MyView.axml"
			}
		}
	],

*/
